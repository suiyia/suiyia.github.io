{"meta":{"title":"菜鸟日常","subtitle":null,"description":null,"author":"suiyia","url":"http://suiyia.github.io"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-12-24T14:21:24.347Z","updated":"2018-12-23T14:21:42.101Z","comments":false,"path":"/404.html","permalink":"http://suiyia.github.io//404.html","excerpt":"","text":""},{"title":"书单","date":"2018-12-23T14:21:42.107Z","updated":"2018-12-23T14:21:42.107Z","comments":false,"path":"books/index.html","permalink":"http://suiyia.github.io/books/index.html","excerpt":"","text":""},{"title":"关于","date":"2018-12-23T14:21:42.106Z","updated":"2018-12-23T14:21:42.106Z","comments":false,"path":"about/index.html","permalink":"http://suiyia.github.io/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2018-12-23T14:21:42.109Z","updated":"2018-12-23T14:21:42.109Z","comments":false,"path":"categories/index.html","permalink":"http://suiyia.github.io/categories/index.html","excerpt":"","text":""},{"title":"callback","date":"2018-12-23T13:43:41.000Z","updated":"2018-12-23T13:43:41.903Z","comments":true,"path":"callback/index.html","permalink":"http://suiyia.github.io/callback/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-12-24T14:21:24.378Z","updated":"2018-12-23T14:21:42.109Z","comments":true,"path":"links/index.html","permalink":"http://suiyia.github.io/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-12-23T14:21:42.113Z","updated":"2018-12-23T14:21:42.113Z","comments":false,"path":"tags/index.html","permalink":"http://suiyia.github.io/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2018-12-23T14:21:42.112Z","updated":"2018-12-23T14:21:42.112Z","comments":false,"path":"repository/index.html","permalink":"http://suiyia.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"Redis 简单介绍与 Jedis 常用操作","slug":"Redis简单介绍与Jedis常用操作","date":"2019-02-18T13:02:00.000Z","updated":"2019-02-18T13:25:53.081Z","comments":true,"path":"2019/02/18/Redis简单介绍与Jedis常用操作/","link":"","permalink":"http://suiyia.github.io/2019/02/18/Redis简单介绍与Jedis常用操作/","excerpt":"","text":"[toc] 介绍 Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 主要对 Redis 中文网 文档内容进行总结，并使用 Jedis 实现一些基本操作。 使用 Jedis 实现 Redis 基本操作Jedis 是一个小而精的 Redis 客户端，用 Java 实现 strings 操作 123456789String result = jedis.set(\"name\",\"chx\"); // 添加 String ，result = \"OK\"result = jedis.mset(\"name\", \"chenhaoxiang\", \"age\", \"20\", \"email\", \"chxpostbox@outlook.com\"); // 同时设置多个键值对 result = \"OK\"Boolean exists = jedis.exists(\"name\"); // 是否存在 key=user 的记录result = jedis.get(\"name\"); // 获取数据，result = \"chx\"Long appendres = jedis.append(\"name\", \" is my name;\"); // 拼接，appendres = 15，拼接后字符串长度Long delres = jedis.del(\"name\"); //删除某个键值对， delres = 1//键对应 value 的自增操作，具备原子性，如果键包含错误类型的值或包含无法表示为整数的字符串，则会返回错误。此操作限于64位有符号整数。ERR value is not an integer or out of range//如果键不存在，则在执行操作之前将其设置为0。如果 age 不存在，操作后 age = 1；Long incrres = jedis.incr(\"age\"); // 用于将键的整数值递增1。 incrres = 21，递增后的值。 lists 操作 123456Long res1 = jedis.lpush(\"list\",\"1\"); // 头部插入一个元素，res1 = 1res1 = jedis.lpush(\"list\",\"2\"); // res1 = 2res1 = jedis.lpush(\"list\",\"3\"); // res1 = 3 返回该 List 的长度jedis.rpush(\"list\",\"5\"); // 尾部插入元素Long llen = jedis.llen(\"list\"); // List 长度，llen = 4List&lt;String&gt; list3 = jedis.lrange(\"list\",0,-1); // list3 = [3,2,1,5] 按范围取出,第一个是key，第二个是起始位置，第三个是结束位置 sets 操作 123456789res1 = jedis.sadd(\"set\",\"1\");res1 = jedis.sadd(\"set\",\"2\");res1 = jedis.sadd(\"set\",\"3\"); // 添加Long srem = jedis.srem(\"set\",\"2\"); // 移除某个元素Set&lt;String&gt; set1 = jedis.smembers(\"set\"); // 获取 key=set 的 SetBoolean sismember = jedis.sismember(\"set\",\"1\"); // key=set 的 Set 中是否存在元素 \"1\"String srandmember = jedis.srandmember(\"set\"); // 随机返回一个 set 元素List&lt;String&gt; list4 = jedis.srandmember(\"set\",2); // 随机返回指定个数个元素Long scar = jedis.scard(\"set\"); // set 的元素个数 sorted sets 操作( TODO 用到再更新) 123jedis.zadd(\"zset\",1,\"1\");jedis.zadd(\"zset\",2.0,\"2\");jedis.zadd(\"zset\",3,\"3\"); Hashes 操作 12345678910111213141516Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;();map.put(\"name\", \"chx\");map.put(\"age\", \"100\");map.put(\"email\", \"***@outlook.com\");result = jedis.hmset(\"user\", map); // 添加 Map，result = \"OK\"String res = jedis.hget(\"user\",\"age\"); // 获取 Map 指定 key 的 value，只能获取单个 key，res = 100List&lt;String&gt; list = jedis.hmget(\"user\", \"name\", \"age\", \"email\"); // 获取 Map 指定 key 的 value，同时指定多个 key，list = [chx, 100, ***@outlook.com];Long hdel = jedis.hdel(\"user\", \"age\"); //删除 map 中的某个键值，hdel = 1Long hlen = jedis.hlen(\"user\"); // 获取 map 中的键值对个数，hlen = 2Set&lt;String&gt; set = jedis.hkeys(\"user\"); // 返回 map 中的所有 keyIterator&lt;String&gt; iterator = jedis.hkeys(\"user\").iterator(); // 迭代遍历while (iterator.hasNext())&#123; String key = iterator.next(); String value = jedis.hmget(\"user\",key).get(0);&#125;List&lt;String&gt; list2 = jedis.hvals(\"user\"); // 返回 map 中的所有 value Redis 其它名词 expire 过期 Redis 允许为每一个 key 设置不同的过期时间，当它们到期时将自动从服务器上删除。 主动删除：client 主动访问，发现过期，立即删除 被动删除：Redis 定时随机选择一些 key 进行检测，删除过期的 key，如果删除比例高于 25%，则继续选择一些 key 进行删除 管道(Pipelining) Redis是一种基于客户端-服务端模型以及请求/响应协议的TCP服务。发送一个命令之后只有等待服务器返回之后才会执行后续命令。 管道则可以一次发送多条命令而不必立即等待服务器返回，收到命令之后，服务器会以队列形式回复命令，管道操作比较耗内存，要注意命令的大小。 12345Pipeline pipeline = jedis.pipelined();for (int i = 0; i &lt; 100; i++) &#123; pipeline.set(\"1\",\"1\");&#125;pipeline.sync(); Redis学习笔记7–Redis管道（pipeline） 分布式缓存Redis之Pipeline（管道） 事务 将一组 Redis 命令放到事务中执行，MULTI 、 EXEC 、 DISCARD 和 WATCH 是 Redis 事务相关的命令。 123456String watch = jedis.watch(\"123\");Transaction multi = jedis.multi();multi.set(\"123\",\"123\");List&lt;Object&gt; list1 = multi.exec();multi.discard();jedis.unwatch(); multi 用于开启一个事务，exec 执行事务，watch 用于监测事务中 key 的变化，如果 key 被其它客户端改过了，那么整个事务会被取消，discard 用于取消事务 总结这个总结主要是了解下 Jedis 常用操作。具体细节学习需要文档、项目结合学习。 博客参考：【Redis】Java中使用Jedis操作Redis(Maven导入包)、创建Redis连接池","categories":[{"name":"redis","slug":"redis","permalink":"http://suiyia.github.io/categories/redis/"}],"tags":[{"name":"redis","slug":"redis","permalink":"http://suiyia.github.io/tags/redis/"}]},{"title":"展望 2019 ！","slug":"展望-2019","date":"2019-01-02T14:28:00.000Z","updated":"2019-01-02T15:44:08.162Z","comments":true,"path":"2019/01/02/展望-2019/","link":"","permalink":"http://suiyia.github.io/2019/01/02/展望-2019/","excerpt":"","text":"回首 2018，毕业、入职，名校光环不再，浪潮褪去，原来我一直在裸泳。 作为已经工作半年的「职场新人」，仍有许多的不足和需要学习的地方。激情是年轻人应该拥有的东西，没有梦想，和咸鱼一样，我不甘心！ 制定好目标，坚持的执行下去，总会有好的结果。 坚持看书，每天花一个小时看书。自己思考、总结，把书中的想法总结出来，提升了思维也锻炼了写作能力。 坚持写博客，从公司项目中了解框架，既熟悉了业务，也运用得了框架，这应该是头两年需要技术积累的东西。 坚持锻炼，体重控制在 130 斤应该是最完美的体重，向这个目标进军，现在 140 斤。 自己需要注意的地方： 聆听的方式。别人与自己说话，学会聆听，学会体会别人话中表现的含义，不轻易打断别人，有时候还需要委婉地表达自己的想法。 注意社交，一个人闷着屋里，并不会造出什么轮子，随时了解外面发生的事，多个周围的同事交流，结交更多的朋友，体会不同人的想法、见解，开拓自己的视野。 唯一愿望： 找一个可以一起吃饭、一起看电影、一起出去玩的女朋友。 结语： 人生就像一场马拉松，起步快的人，往往能提前看到美丽的风景，坚持久的人，必将得到丰厚的硕果，加油 2019 ！","categories":[],"tags":[]}]}